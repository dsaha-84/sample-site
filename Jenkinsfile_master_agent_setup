import com.amazonaws.services.ec2.model.InstanceType
import com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.domains.Domain
import hudson.model.*
import hudson.plugins.ec2.AmazonEC2Cloud
import hudson.plugins.ec2.AMITypeData
import hudson.plugins.ec2.EC2Tag
import hudson.plugins.ec2.SlaveTemplate
import hudson.plugins.ec2.SpotConfiguration
import hudson.plugins.ec2.UnixData
import jenkins.model.Jenkins

// parameters
ami = env.ami
remoteAdmin = env.AgentAdminUser
remoteFS = env.AgentremoteFS
securityGroups = env.AgentSecurityGroups
subnetId = env.AgentSubnetId
type = env.AgentInstanceType
accessKey = env.AccessKey
secretKey = env.SecretKey

def SlaveTemplateUsEast1Parameters = [
  ami:                      'ami-AAAAAAAA',
  associatePublicIp:        true,
  connectBySSHProcess:      true,
  connectUsingPublicIp:     true,
  customDeviceMapping:      '',
  deleteRootOnTermination:  true,
  description:              'Jenkins-Linux-Agent',
  ebsOptimized:             false,
  iamInstanceProfile:       '',
  idleTerminationMinutes:   '5',
  initScript:               '',
  instanceCapStr:           '2',
  jvmopts:                  '',
  labelString:              'aws.ec2.us.east.jenkins.slave',
  launchTimeoutStr:         '',
  numExecutors:             '1',
  remoteAdmin:              'ec2-user',
  remoteFS:                 '',
  securityGroups:           'sg-11111111',
  stopOnTerminate:          false,
  subnetId:                 'subnet-SSSSSSSS',
  tags:                     new EC2Tag('Name', 'jenkins-slave'),
  tmpDir:                   '',
  type:                     't2.medium',
  useDedicatedTenancy:      false,
  useEphemeralDevices:      true,
  usePrivateDnsName:        true,
  userData:                 '',
  //zone:                     'us-east-1a,us-east-1b'
]

def AmazonEC2CloudParameters = [
  cloudName:      'MyCompany',
  credentialsId:  'jenkins-aws-key',
  instanceCapStr: '2',
  privateKey:     '''-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAmWxR9i3S0+ANPFBKcPuf+q33kgP/M5r8jq2SBZxFfy/YzIm3pvgn8x0jHcZj
RllQCp6EXnl0qyvHuamDCH0FesQBUjzNLTVWHIVkEVyLE9zLi2Xs4GmB0X0FlQFf2/+PlA9xxeeO
NR7W8/BuvBwUoYfFDb0KcFUte0UL9CqBdjhlm0YHqhIvM+tiFkld07JZ4QaJJjMari0wfm7zQ8kW
rThBZeiyapj9V/17mVPALUbzUCBzrLADqhUVg7uYoGQ8eT42bc/eW0bDDKYFV4VF+WKgkRaLnbRA
4V1SoIDkuPHZ5XyUjCZ5h0ZABGy/4svnaYZxQT/E656lfmCSTHl1YQIDAQABAoIBAGbZC1SpQUSR
VK4S8OQuef8U8fprPX+9rQKEbnfeW2Q4kfADfh6rCjTaWnkSTeiR5KtJuliOuNwqXBgk/1cIYEz8
6hnT8oMU1yYFcaCF1iG5iKVo7VM+xyzEz6IkqrsS5ZAOjmlpoZYQl24txj3J4Tarijh8emv1Xaje
D3ZdrC2v9FFrOTUo+xXQIiIOTMqLT82gaQqRCxUCp2akd0LIhu5fyvPDz19/fKTmf6rlYKiqeZ0m
bzu3rCxgrenzpIBoekSua8XyEwZnT710oKvTgX4pGIjQcWUXX1wkKhnzLIGG6O2RgtrOpbcwumS7
aRZ/msSkL8kx5caAllcBXzdu8PECgYEA1ZCzuTRuHSBsk8JnTlW2cRwSS0/SUVNVsrUKri9sy6ON
72+qV2BQHx63kch6H4aIQbJJRndYdjphkmxcRGMVoBa4qqCHw+4MkxaRZIMKL2bDdDznhO+FhXow
jqFKgNtPsl1zJaV0eNdZjLtwyViDiq6O03GXcAsSgoOJveAbMU0CgYEAt+hngkn4y2gmRp1NKaUV
PMjAh0Om/6+dg/2jSL/Gtts4Lwl/X4N4gN8+iHGE7BgOmT0ElahN9Ln2SdY5AHspUFRGvUzyjnDH
o2WFVxj+ifHNo86rJCIPiwMdjjrivvM/1nNygpDLuGLUgMSGVtOzE82mKFXkNGgNr0TAUBAaCmUC
gYAm7oEE0xz7rEx+xyKj8hYXGoHvPrbdYm6t7DjtNfIEUWVvb5DC6ujQM35NUhmJI7I1H7Yh5WG3
876TvbM4OEPZ8ipp2GfHfN7H9YY9p3G04GvjBbNC1ZMmmPa/GYIGaXRm1IhIJZhM6x0E/ap62ero
3hdlTkDICQyvxCDY/0CVxQKBgQCzav94w7P+tagJ4jLCezSh7XSvQhgtgGYavBtNwRMbl/lTIl/q
jffFOobmVGGKd9neNAJCA0WyiK430NAhoQZoQSAWVHia8HpD9apFk7PYXlfyBJFAmh4xz6NI/Df0
dJoGHPFNYfft9jU9Pv2UvcoKeuoslcciPZWENX2tXlgZZQKBgQC+4NUp7O8CCVyONmSiILvMNEC8
C/b9z5juX+zNelSuV0h9uZBngo/68D3rcp2WbJaaNTKz6G0coUhg8hCvUgTpmjQp6Fc/I+jJ3agj
OpNx3TNnL9MgbEsZUOG+yA93DUiO4bZQi9ueBqiczO6zM7fy9RdrEzvKsJMQe9fia9KeSw==
-----END RSA PRIVATE KEY-----''',
  region: 'us-east-1',
  useInstanceProfileForCredentials: false
]

def AWSCredentialsImplParameters = [
  id:           'jenkins-aws-key',
  description:  'Jenkins AWS IAM key',
  accessKey:    '01234567890123456789',
  secretKey:    '01345645657987987987987987987987987987'
]

// https://github.com/jenkinsci/aws-credentials-plugin/blob/aws-credentials-1.23/src/main/java/com/cloudbees/jenkins/plugins/awscredentials/AWSCredentialsImpl.java
AWSCredentialsImpl aWSCredentialsImpl = new AWSCredentialsImpl(
  CredentialsScope.GLOBAL,
  AWSCredentialsImplParameters.id,
  AWSCredentialsImplParameters.accessKey,
  AWSCredentialsImplParameters.secretKey,
  AWSCredentialsImplParameters.description
)

// https://github.com/jenkinsci/ec2-plugin/blob/ec2-1.38/src/main/java/hudson/plugins/ec2/SlaveTemplate.java
SlaveTemplate slaveTemplateUsEast1 = new SlaveTemplate(
  SlaveTemplateUsEast1Parameters.ami,
  SlaveTemplateUsEast1Parameters.zone,
  null,
  SlaveTemplateUsEast1Parameters.securityGroups,
  SlaveTemplateUsEast1Parameters.remoteFS,
  InstanceType.fromValue(SlaveTemplateUsEast1Parameters.type),
  SlaveTemplateUsEast1Parameters.ebsOptimized,
  SlaveTemplateUsEast1Parameters.labelString,
  Node.Mode.NORMAL,
  SlaveTemplateUsEast1Parameters.description,
  SlaveTemplateUsEast1Parameters.initScript,
  SlaveTemplateUsEast1Parameters.tmpDir,
  SlaveTemplateUsEast1Parameters.userData,
  SlaveTemplateUsEast1Parameters.numExecutors,
  SlaveTemplateUsEast1Parameters.remoteAdmin,
  new UnixData(null, null, null, null),
  SlaveTemplateUsEast1Parameters.jvmopts,
  SlaveTemplateUsEast1Parameters.stopOnTerminate,
  SlaveTemplateUsEast1Parameters.subnetId,
  [SlaveTemplateUsEast1Parameters.tags],
  SlaveTemplateUsEast1Parameters.idleTerminationMinutes,
  SlaveTemplateUsEast1Parameters.usePrivateDnsName,
  SlaveTemplateUsEast1Parameters.instanceCapStr,
  SlaveTemplateUsEast1Parameters.iamInstanceProfile,
  SlaveTemplateUsEast1Parameters.deleteRootOnTermination,
  SlaveTemplateUsEast1Parameters.useEphemeralDevices,
  SlaveTemplateUsEast1Parameters.useDedicatedTenancy,
  SlaveTemplateUsEast1Parameters.launchTimeoutStr,
  SlaveTemplateUsEast1Parameters.associatePublicIp,
  SlaveTemplateUsEast1Parameters.customDeviceMapping,
  SlaveTemplateUsEast1Parameters.connectBySSHProcess,
  SlaveTemplateUsEast1Parameters.connectUsingPublicIp
)

// https://javadoc.jenkins.io/plugin/ec2/index.html?hudson/plugins/ec2/AmazonEC2Cloud.html
AmazonEC2Cloud amazonEC2Cloud = new AmazonEC2Cloud(
  AmazonEC2CloudParameters.cloudName,
  AmazonEC2CloudParameters.useInstanceProfileForCredentials,
  AmazonEC2CloudParameters.credentialsId,
  AmazonEC2CloudParameters.region,
  AmazonEC2CloudParameters.privateKey,
  AmazonEC2CloudParameters.instanceCapStr,
  [slaveTemplateUsEast1],
  '',
  ''
)

// get Jenkins instance
Jenkins jenkins = Jenkins.getInstance()

// get credentials domain
def domain = Domain.global()

// get credentials store
def store = jenkins.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

// add credential to store
store.addCredentials(domain, aWSCredentialsImpl)

// add cloud configuration to Jenkins
jenkins.clouds.add(amazonEC2Cloud)

// save current Jenkins state to disk
jenkins.save()
